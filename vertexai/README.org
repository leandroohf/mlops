
* VertexAI + KubeFlow

  Simple VertexAI + Kubflow pipeline tutorial. It show 3 stages:

  1. preprocessing: generates fake data
  2. training: trains 2 models in parallel
  3. publishing: upload best model to model artifacts registry

* Set infracstructure

  #+begin_src sh
    PROJECT_ID="mlops-project-abacabb"
    REGION="us-central1" # e.g., us-central1, us-east1, europe-west4
    BUCKET="gs://${PROJECT_ID}-bike-share-project-bucket"

    # NOTE: enable VerexAI service
    gcloud services enable aiplatform.googleapis.com

    # NOTE: make the bucket in the case it does NOT exist
    gsutil mb -l ${REGION} ${BUCKET}

    # NOTE: Setting Docker registry
    gcloud services enable artifactregistry.googleapis.com --project "$PROJECT_ID"

    # create the artifacts registry for docker images if not exists
    export REPO="model-artifacts"

    # NOTE: for list of all regions
    gcloud artifacts locations list

    gcloud artifacts repositories create "$REPO" \
           --project "$PROJECT_ID" \
           --repository-format=docker \
           --location="$REGION" \
           --description="Training images for Vertex AI"

    # setting docker authentication
    gcloud auth configure-docker "$REGION-docker.pkg.dev"


    # NOTE: build and push image
    # this can be ran by circleci pipelines (not the scope on this project)
    export TAG="vrtx1"
    export IMAGE="vertexai-pipe-image"
    export IMAGE_URI="$REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$IMAGE:$TAG"

    # NOTE: set arch (docker build cross platform) Because I am on Mac
    docker buildx create --use --name vertexamd64 2>/dev/null || docker buildx use vertexamd64


    # NOTE: builds with target arch = linux/amd64
    # google tools n vertexai likes linux/amd64 adn I am running on linux. This cause a lot of extra steps
    # or bug fixes
    docker buildx build --platform linux/amd64 \
           -t "${IMAGE_URI}" \
           -f Dockerfile \
           . --push

    docker buildx imagetools inspect "${IMAGE_URI}" | grep -A2 "Platform:"

    # NOTE: list all pushed images for checking
    gcloud artifacts docker images list \
           "$REGION-docker.pkg.dev/$PROJECT_ID/$REPO"
  #+end_src

* How to run (runbook)

   * Train
     #+begin_src sh
       # NOTE: run local
       python run_local.py

       # NOTE: run vertexai
       python run_vertexai.py
     #+end_src

   * predictions

     #+begin_src sh
       export BUCKET_NAME=mlops-project-id-project-bucket
       python run_batch_predictor.py
     #+end_src

